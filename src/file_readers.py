import os
import pandas as pd
from typing import List, Dict


def read_csv_file(file_name: str) -> List[Dict]:
    """
    –°—á–∏—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ CSV-—Ñ–∞–π–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.

    :param file_name: –ò–º—è —Ñ–∞–π–ª–∞ (–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –æ—Ç –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞).
    :return: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.
    """
    file_path = os.path.join(os.getcwd(), "data", file_name)
    if not os.path.exists(file_path):
        raise FileNotFoundError(f"–§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    try:
        df = pd.read_csv(file_path, delimiter=";", encoding="utf-8")  # ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω delimiter=";"
        print("üîç –ü–µ—Ä–≤—ã–µ 5 –∑–∞–ø–∏—Å–µ–π –∏–∑ CSV:", df.head(5).to_dict(orient="records"))  # –û—Ç–ª–∞–¥–∫–∞
        return df.to_dict(orient="records")
    except Exception as e:
        raise ValueError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ CSV-—Ñ–∞–π–ª–∞: {e}")


def read_excel_file(file_name: str) -> List[Dict]:
    """
    –°—á–∏—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ Excel-—Ñ–∞–π–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.

    :param file_name: –ò–º—è —Ñ–∞–π–ª–∞ (–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –æ—Ç –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞).
    :return: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.
    """
    file_path = os.path.join(os.getcwd(), "data", file_name)
    if not os.path.exists(file_path):
        raise FileNotFoundError(f"–§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    try:
        df = pd.read_excel(file_path, engine="openpyxl", dtype=str)  # ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω dtype=str
        print("üîç –ü–µ—Ä–≤—ã–µ 5 –∑–∞–ø–∏—Å–µ–π –∏–∑ Excel:", df.head(5).to_dict(orient="records"))  # –û—Ç–ª–∞–¥–∫–∞
        return df.to_dict(orient="records")
    except Exception as e:
        raise ValueError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ Excel-—Ñ–∞–π–ª–∞: {e}")
